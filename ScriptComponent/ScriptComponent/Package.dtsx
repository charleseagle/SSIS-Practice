<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="11/11/2015 12:14:43 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="EAGLE"
  DTS:CreatorName="Eagle\Charleseagle"
  DTS:DTSID="{F43E57C9-D80B-40BB-9FC3-A6C73F49E050}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="13.0.700.219"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="3"
  DTS:VersionGUID="{3B1EDD7A-A6F6-4D08-9873-AEB0B823F8D8}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Dodgy data]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{2227F398-1A64-4919-AA74-595262EE5527}"
      DTS:ObjectName="Dodgy data">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="E:\SQL_Server_Practice\SSIS\ScriptComponent\Contestants.txt">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="ContestantName"
              DTS:DTSID="{C34914FC-DE3D-4503-8C71-948C61F35AC4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="19"
              DTS:TextQualified="True"
              DTS:ObjectName="SeriesNumber"
              DTS:DTSID="{1F16E3DD-A125-40DD-8E7B-2AA2C563D92C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="19"
              DTS:TextQualified="True"
              DTS:ObjectName="Position"
              DTS:DTSID="{7AF95FF8-4B81-4F49-9CBA-93B6F37D4436}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="MentorName"
              DTS:DTSID="{AC9F20E8-A8B8-4E66-9D26-7C11002AD63C}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Delete old data"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{B09C3F2A-30E5-4EA2-8027-19E5AF9023A1}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Delete old data"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016 CTP3.0; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{A186B381-B594-4795-A480-1C7028D9E0B5}"
          SQLTask:SqlStatementSource="TRUNCATE TABLE BadContestant;&#xA;TRUNCATE TABLE GoodContestant;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Import dodgy data"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{CFDCF0AA-E310-4B9F-B004-EC4160B103D1}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Import dodgy data"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Import dodgy data\Bad data table"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Bad data table"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[BadContestant]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import dodgy data\Bad data table.Connections[OleDbConnection]"
                  connectionManagerID="{A186B381-B594-4795-A480-1C7028D9E0B5}:external"
                  connectionManagerRefId="Project.ConnectionManagers[EAGLE.SSIS]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Import dodgy data\Bad data table.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import dodgy data\Bad data table.Inputs[OLE DB Destination Input].Columns[ContestantName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="ContestantName"
                      externalMetadataColumnId="Package\Import dodgy data\Bad data table.Inputs[OLE DB Destination Input].ExternalColumns[ContestantName]"
                      lineageId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output].Columns[ContestantName]" />
                    <inputColumn
                      refId="Package\Import dodgy data\Bad data table.Inputs[OLE DB Destination Input].Columns[Problem]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="1000"
                      cachedName="Problem"
                      externalMetadataColumnId="Package\Import dodgy data\Bad data table.Inputs[OLE DB Destination Input].ExternalColumns[Problem]"
                      lineageId="Package\Import dodgy data\Validate data.Outputs[Output 0].Columns[Problem]" />
                    <inputColumn
                      refId="Package\Import dodgy data\Bad data table.Inputs[OLE DB Destination Input].Columns[intSeries]"
                      cachedDataType="i4"
                      cachedName="intSeries"
                      externalMetadataColumnId="Package\Import dodgy data\Bad data table.Inputs[OLE DB Destination Input].ExternalColumns[SeriesNumber]"
                      lineageId="Package\Import dodgy data\Validate data.Outputs[Output 0].Columns[intSeries]" />
                    <inputColumn
                      refId="Package\Import dodgy data\Bad data table.Inputs[OLE DB Destination Input].Columns[intPosition]"
                      cachedDataType="i4"
                      cachedName="intPosition"
                      externalMetadataColumnId="Package\Import dodgy data\Bad data table.Inputs[OLE DB Destination Input].ExternalColumns[Position]"
                      lineageId="Package\Import dodgy data\Validate data.Outputs[Output 0].Columns[intPosition]" />
                    <inputColumn
                      refId="Package\Import dodgy data\Bad data table.Inputs[OLE DB Destination Input].Columns[MentorName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="MentorName"
                      externalMetadataColumnId="Package\Import dodgy data\Bad data table.Inputs[OLE DB Destination Input].ExternalColumns[Mentor]"
                      lineageId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output].Columns[MentorName]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import dodgy data\Bad data table.Inputs[OLE DB Destination Input].ExternalColumns[ContestantName]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="ContestantName" />
                    <externalMetadataColumn
                      refId="Package\Import dodgy data\Bad data table.Inputs[OLE DB Destination Input].ExternalColumns[SeriesNumber]"
                      dataType="i4"
                      name="SeriesNumber" />
                    <externalMetadataColumn
                      refId="Package\Import dodgy data\Bad data table.Inputs[OLE DB Destination Input].ExternalColumns[Position]"
                      dataType="i4"
                      name="Position" />
                    <externalMetadataColumn
                      refId="Package\Import dodgy data\Bad data table.Inputs[OLE DB Destination Input].ExternalColumns[Mentor]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="Mentor" />
                    <externalMetadataColumn
                      refId="Package\Import dodgy data\Bad data table.Inputs[OLE DB Destination Input].ExternalColumns[Problem]"
                      codePage="1252"
                      dataType="text"
                      name="Problem" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import dodgy data\Bad data table.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Import dodgy data\Bad data table.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import dodgy data\Bad data table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import dodgy data\Bad data table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import dodgy data\Bad data table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import dodgy data\Bad data table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import dodgy data\Conditional Split"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Conditional Split"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Import dodgy data\Conditional Split.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import dodgy data\Conditional Split.Inputs[Conditional Split Input].Columns[IfGood]"
                      cachedDataType="bool"
                      cachedName="IfGood"
                      lineageId="Package\Import dodgy data\Validate data.Outputs[Output 0].Columns[IfGood]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import dodgy data\Conditional Split.Outputs[Good data]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Good data"
                  synchronousInputId="Package\Import dodgy data\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Import dodgy data\Validate data.Outputs[Output 0].Columns[IfGood]} ==  TRUE </property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">IfGood ==  TRUE </property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Import dodgy data\Conditional Split.Outputs[Bad data]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Bad data"
                  synchronousInputId="Package\Import dodgy data\Conditional Split.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Import dodgy data\Conditional Split.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Import dodgy data\Conditional Split.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import dodgy data\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import dodgy data\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import dodgy data\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import dodgy data\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import dodgy data\Dodgy data import"
              componentClassID="Microsoft.FlatFileSource"
              contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Source"
              localeId="1033"
              name="Dodgy data import"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether zero-length columns are treated as null."
                  name="RetainNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                  name="FileNameColumnName"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import dodgy data\Dodgy data import.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Dodgy data]"
                  connectionManagerRefId="Package.ConnectionManagers[Dodgy data]"
                  name="FlatFileConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output]"
                  name="Flat File Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output].Columns[ContestantName]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output].ExternalColumns[ContestantName]"
                      length="50"
                      lineageId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output].Columns[ContestantName]"
                      name="ContestantName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output].Columns[SeriesNumber]"
                      dataType="ui4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output].ExternalColumns[SeriesNumber]"
                      lineageId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output].Columns[SeriesNumber]"
                      name="SeriesNumber"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output].Columns[Position]"
                      dataType="ui4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output].ExternalColumns[Position]"
                      lineageId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output].Columns[Position]"
                      name="Position"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output].Columns[MentorName]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output].ExternalColumns[MentorName]"
                      length="50"
                      lineageId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output].Columns[MentorName]"
                      name="MentorName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output].ExternalColumns[ContestantName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="ContestantName" />
                    <externalMetadataColumn
                      refId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output].ExternalColumns[SeriesNumber]"
                      dataType="ui4"
                      name="SeriesNumber" />
                    <externalMetadataColumn
                      refId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output].ExternalColumns[Position]"
                      dataType="ui4"
                      name="Position" />
                    <externalMetadataColumn
                      refId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output].ExternalColumns[MentorName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="MentorName" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Error Output]"
                  isErrorOut="true"
                  name="Flat File Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      codePage="1252"
                      dataType="text"
                      description="Flat File Source Error Output Column"
                      lineageId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      name="Flat File Source Error Output Column" />
                    <outputColumn
                      refId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import dodgy data\Good data table"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Good data table"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[GoodContestant]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import dodgy data\Good data table.Connections[OleDbConnection]"
                  connectionManagerID="{A186B381-B594-4795-A480-1C7028D9E0B5}:external"
                  connectionManagerRefId="Project.ConnectionManagers[EAGLE.SSIS]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Import dodgy data\Good data table.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import dodgy data\Good data table.Inputs[OLE DB Destination Input].Columns[ContestantName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="ContestantName"
                      externalMetadataColumnId="Package\Import dodgy data\Good data table.Inputs[OLE DB Destination Input].ExternalColumns[ContestantName]"
                      lineageId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output].Columns[ContestantName]" />
                    <inputColumn
                      refId="Package\Import dodgy data\Good data table.Inputs[OLE DB Destination Input].Columns[intSeries]"
                      cachedDataType="i4"
                      cachedName="intSeries"
                      externalMetadataColumnId="Package\Import dodgy data\Good data table.Inputs[OLE DB Destination Input].ExternalColumns[SeriesNumber]"
                      lineageId="Package\Import dodgy data\Validate data.Outputs[Output 0].Columns[intSeries]" />
                    <inputColumn
                      refId="Package\Import dodgy data\Good data table.Inputs[OLE DB Destination Input].Columns[intPosition]"
                      cachedDataType="i4"
                      cachedName="intPosition"
                      externalMetadataColumnId="Package\Import dodgy data\Good data table.Inputs[OLE DB Destination Input].ExternalColumns[Position]"
                      lineageId="Package\Import dodgy data\Validate data.Outputs[Output 0].Columns[intPosition]" />
                    <inputColumn
                      refId="Package\Import dodgy data\Good data table.Inputs[OLE DB Destination Input].Columns[MentorName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="MentorName"
                      externalMetadataColumnId="Package\Import dodgy data\Good data table.Inputs[OLE DB Destination Input].ExternalColumns[Mentor]"
                      lineageId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output].Columns[MentorName]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import dodgy data\Good data table.Inputs[OLE DB Destination Input].ExternalColumns[ContestantName]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="ContestantName" />
                    <externalMetadataColumn
                      refId="Package\Import dodgy data\Good data table.Inputs[OLE DB Destination Input].ExternalColumns[SeriesNumber]"
                      dataType="i4"
                      name="SeriesNumber" />
                    <externalMetadataColumn
                      refId="Package\Import dodgy data\Good data table.Inputs[OLE DB Destination Input].ExternalColumns[Position]"
                      dataType="i4"
                      name="Position" />
                    <externalMetadataColumn
                      refId="Package\Import dodgy data\Good data table.Inputs[OLE DB Destination Input].ExternalColumns[Mentor]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="Mentor" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import dodgy data\Good data table.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Import dodgy data\Good data table.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import dodgy data\Good data table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import dodgy data\Good data table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import dodgy data\Good data table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import dodgy data\Good data table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import dodgy data\Validate data"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Validate data"
              version="10">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    //public override void PreExecute()
    //{
    //    base.PreExecute();
    //    /*
    //     * Add your code here
    //     */
    //}

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    //public override void PostExecute()
    //{
    //    base.PostExecute();
    //    /*
    //     * Add your code here
    //     */
    //}

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */

        // If any of the field are null, say so and exit
         if (Row.ContestantName_IsNull || Row.Position_IsNull ||
            Row.SeriesNumber_IsNull || Row.MentorName_IsNull)
        {
            Row.Problem = "At least one volumn is not filled in.";
            Row.IfGood = false;
            return;
        }

        // try to convert series/position numbers to integers
        int s = 0;
        int p = 0;
        try
        {
            s = Convert.ToInt32(Row.SeriesNumber);
        }
        catch
        {
            s = 0;
        }
        try
        {
            p = Convert.ToInt32(Row.Position);
        }
        catch
        {
            p = 0;
        }
        // if either still 0, we couldn't convert
        if (s == 0 || p == 0)
        {
            Row.Problem = "The series and position numbers aren't both integers";
            Row.IfGood = false;
            return;
        }

        // store the correct numbers for position and series
        Row.intSeries = s;
        Row.intPosition = p;
        // trim the mentor and contestant fields
        Row.MentorName = Row.MentorName.Trim();
        Row.ContestantName = Row.ContestantName.Trim();
        // record fact all worked OK
        Row.Problem = "";
        Row.IfGood = true;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String ContestantName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
        set
        {
            this[0] = value;
        }
    }
    public bool ContestantName_IsNull
    {
        get
        {
            return IsNull(0);
        }
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public UInt32 SeriesNumber
    {
        get
        {
            return Buffer.GetUInt32(BufferColumnIndexes[1]);
        }
    }
    public bool SeriesNumber_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public UInt32 Position
    {
        get
        {
            return Buffer.GetUInt32(BufferColumnIndexes[2]);
        }
    }
    public bool Position_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String MentorName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
        set
        {
            this[3] = value;
        }
    }
    public bool MentorName_IsNull
    {
        get
        {
            return IsNull(3);
        }
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 intSeries
    {
        set
        {
            this[4] = value;
        }
    }
    public bool intSeries_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Boolean IfGood
    {
        set
        {
            this[5] = value;
        }
    }
    public bool IfGood_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Problem
    {
        set
        {
            this[6] = value;
        }
    }
    public bool Problem_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 intPosition
    {
        set
        {
            this[7] = value;
        }
    }
    public bool intPosition_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_afcd51d96e154d8c8192998fb728e0a2.Properties.Settings.get_Default():SC_afcd51d96e154d8c8192998fb728e0a2.Properties.Sett" +
    "ings")]

namespace SC_afcd51d96e154d8c8192998fb728e0a2.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_afcd51d96e154d8c8192998fb728e0a2.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{a6253f59-ac11-48ca-985d-8d0adc97bbe8}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_afcd51d96e154d8c8192998fb728e0a2</RootNamespace>
    <AssemblyName>SC_afcd51d96e154d8c8192998fb728e0a2</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_afcd51d96e154d8c8192998fb728e0a2" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_afcd51d96e154d8c8192998fb728e0a2</msb:CodeName>
		<msb:DisplayName>SC_afcd51d96e154d8c8192998fb728e0a2</msb:DisplayName>
		<msb:ProjectId>{1233F3B3-6D3F-40F9-B143-534A8160B863}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_afcd51d96e154d8c8192998fb728e0a2.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_afcd51d96e154d8c8192998fb728e0a2")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_afcd51d96e154d8c8192998fb728e0a2")]
[assembly: AssemblyCopyright("Copyright @  2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_afcd51d96e154d8c8192998fb728e0a2.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_afcd51d96e154d8c8192998fb728e0a2.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_afcd51d96e154d8c8192998fb728e0a2.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_afcd51d96e154d8c8192998fb728e0a2.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_afcd51d96e154d8c8192998fb728e0a2.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_afcd51d96e154d8c8192998fb728e0a2.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDADH3QlYAAAAAAAAAAOAAIiALATAAABgAAAAIAAAAAAAAPjcA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAOw2AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAARBcAAAAgAAAAGAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAaAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAg
NwAAAAAAAEgAAAACAAUAfCMAALgSAAABAAAAAAAAADQ2AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswAgC6AAAAAQAAEQNvBgAABi0YA28LAAAGLRADbwkAAAYt
CANvDgAABiwTA3IBAABwbxQAAAYDFm8SAAAGKhYKFgsDbwgAAAYoEAAACgreBSYWCt4AAANvCgAA
BigQAAAKC94FJhYL3gAGLAMHLRMDck0AAHBvFAAABgMWbxIAAAYqAwZvEAAABgMHbxYAAAYDJW8M
AAAGbxEAAApvDQAABgMlbwQAAAZvEQAACm8FAAAGA3K3AABwbxQAAAYDF28SAAAGKgAAARwAAAAA
NwAORQAFDgAAAQAASwAOWQAFDgAAAR4CKBoAAAYqKgIDBAUoEgAACipSAnsTAAAKAnsUAAAKFpRv
FQAACiomAhYDKBYAAAoqIgIWKBcAAAoqWgMsCAIWKBgAAAoqcrkAAHBzGQAACnpSAnsTAAAKAnsU
AAAKF5RvGgAACioiAhcoFwAACipSAnsTAAAKAnsUAAAKGJRvGgAACioiAhgoFwAACipSAnsTAAAK
AnsUAAAKGZRvFQAACiomAhkDKBYAAAoqIgIZKBcAAAoqWgMsCAIZKBgAAAoqcrkAAHBzGQAACno6
AhoDjB0AAAEoFgAACipaAywIAhooGAAACipyuQAAcHMZAAAKejoCGwOMHgAAASgWAAAKKloDLAgC
GygYAAAKKnK5AABwcxkAAAp6JgIcAygWAAAKKloDLAgCHCgYAAAKKnK5AABwcxkAAAp6OgIdA4wd
AAABKBYAAAoqWgMsCAIdKBgAAAoqcrkAAHBzGQAACnoeAigbAAAKKh4CKBwAAAoqfgIoHQAACgIC
cx4AAAZ9AQAABAICcx8AAAZ9AgAABCqSBHJWAQBwGm8eAAAKLBUCBQIDKB8AAAoOBHMDAAAGbxwA
AAYqSisHAgNvHQAABgNvGAAABi3xKgYqOgIoIAAACgIDfQMAAAQqOgIoIAAACgIDfQQAAAQqHgIo
IAAACiqufgUAAAQtHnJmAQBw0AcAAAIoIQAACm8iAAAKcyMAAAqABQAABH4FAAAEKhp+BgAABCoe
AoAGAAAEKhp+BwAABCoeAigkAAAKKi5zJQAABoAHAAAEKgAAQlNKQgEAAQAAAAAADAAAAHY0LjAu
MzAzMTkAAAAABQBsAAAALAcAACN+AACYBwAAeAcAACNTdHJpbmdzAAAAABAPAADYAQAAI1VTAOgQ
AAAQAAAAI0dVSUQAAAD4EAAAwAEAACNCbG9iAAAAAAAAAAIAAAFXFaIBCQEAAAD6ATMAFgAAAQAA
ACIAAAAIAAAABwAAACYAAAAZAAAAJAAAABAAAAABAAAAAwAAABMAAAAYAAAAAQAAAAQAAAABAAAA
AAA3AwEAAAAAAAYARQKaBQYA2QKaBQYAkQGHBQ8ADgYAAAYAvgGuBAYAKAKuBAYACQKuBAYAwAKu
BAYAZQKuBAYAfgKuBAYA1QGuBAYA8AH9AgoAmQLeAAYApQZZBAoAWQXeAA4ASgXeAAoAFAXeAAoA
4gbeAAYAdAGHBQYAagW6BQYACAWZBBIARAEhAxIApQEhAxIALAGEBAYAWQGaBQYADwdZBAYAGgNZ
BAYA3QRZBAYADQBZBAYAcQRZBAYA9wRZBAYA/wBZBAYAbABZBAYAbweuBAAAAAA3AAAAAAABAAEA
AQAQAHkEAAAQAAEAAQABABAAPQUAAD0AAQADAAEAEADEBgAASQABABoAAQAQAJkGAAA5AAMAHgAB
ABAAWgYAADkABAAfAAAAEADBBSsGOQAFACAAAAEQAIkGKwZhAAcAJAAGAJkGigAGAFoGjgABANIG
kgABANIGkgARAGUElgARABwBmgARAFwAngBQIAAAAADGAEwHogABADQhAAAAAIYYegUGAAIAPCEA
AAAAhhh6BSkAAgBHIQAAAACGCK4AJQAFAFwhAAAAAIYIwQAQAAUAZiEAAAAAhgidA1AABgBvIQAA
AACGCLcDqAAGAIYhAAAAAIYILAWtAAcAmyEAAAAAhggPBFAABwCkIQAAAACGCMAErQAHALkhAAAA
AIYI5ANQAAcAwiEAAAAAhgiQACUABwDXIQAAAACGCJ8AEAAHAOEhAAAAAIYIcQNQAAgA6iEAAAAA
hgiHA6gACAABIgAAAACGCB0GAQAJABAiAAAAAIYIJwSoAAoAJyIAAAAAhghRAKgACwA2IgAAAACG
CF8DqAAMAE0iAAAAAIYIRAQQAA0AVyIAAAAAhgjRA6gADgBuIgAAAACGCM0EAQAPAH0iAAAAAIYI
+AOoABAAlCIAAAAAhgBjB1AAEQCcIgAAAACGAKwGUAARAKQiAAAAAIYYegUGABEAxCIAAAAAxgA/
B7EAEQDpIgAAAADGATgHogAVAPwiAAAAAMYBTAeiABYA/iIAAAAAhhh6BbsAFwANIwAAAACGGHoF
uwAYABwjAAAAAIMYegUGABkAJCMAAAAAkwhmBcEAGQBQIwAAAACTCAQBxgAZAFcjAAAAAJMIEAHL
ABkAXyMAAAAAlgi4BtEAGgBmIwAAAACGGHoFBgAaAG4jAAAAAJEYgAXWABoAAAABAGcHAAABAF8F
AAACAGQGAAADACIFAAABAPcCAAABAPcCAAABAPcCAAABAPcCAAABAPcCAAABAPcCAAABAPcCAAAB
APcCAAABAPcCAAABAPcCAAABAPcCAAABAPcCAAABAEAAAAACANQAAAADAF8FAAAEACIFAAABAF8F
AAABAGcHAAABAOgGAAABAOgGAAABAPcCCQB6BQEAEQB6BQYAGQB6BQoAKQB6BRAAMQB6BRAAOQB6
BRAAQQB6BRAASQB6BRAAUQB6BRAAWQB6BRAAYQB6BRAAaQB6BQYAmQB6BQYAuQB6BRUAyQB6BQYA
0QALACAA2QBgBCUAeQB6BSkAeQBfBTMAeQBkBjcAgQAXAzsAeQBQBEAAeQA1BEYAeQA8BAEA4QB6
BRAAgQABAEsAeQBjB1AAeQCsBlAAkQB6BQYA2QCSBlQAkQB4BlsAcQB6BQYAAQF+AGEAAQFrB2oA
oQB6BXAAwQB6BQYALgALAPkALgATAAIBLgAbACEBLgAjACoBLgArAFMBLgAzAFMBLgA7AFMBLgBD
ACoBLgBLAFkBLgBTAFMBLgBbAHABQwBjALoB4QB7ALoB4wBrALoBKQJzACEBSQJzACEBGwADAAEA
BwARAAgAEwAAAMUA2gAAALsD3gAAADAF4gAAABME3gAAANQE4gAAAP8D3gAAAKMA2gAAAIsD3gAA
ACEG5gAAACsE3gAAAFUA3gAAAGMD3gAAAEgE2gAAANUD3gAAANEE5gAAAPwD3gAAAGoF6gAAACQB
7wAAALwG9AACAAQAAwABAAUAAwACAAYABQABAAcABQACAAgABwACAAkACQACAAoACwACAAsADQAC
AAwADwABAA0ADwACAA4AEQABAA8AEQABABAAEwABABEAFQABABIAFwABABMAGQABABQAGwABABUA
HQABABYAHwABABcAIQACACEAIwACACIAJQABACMAJQACACQAJwAEgAAAAQAAAAAAAAAAAAAAAAAT
AAAABAAAAAAAAAAAAAAAeABIAAAAAAANAAAAAAAAAAAAAACBAPIGAAAAAA0AAAAAAAAAAAAAAIEA
FwcAAAAABAAAAAAAAAAAAAAAeABZBAAAAAAAAAAAAQAAAMsFAAAAAAAAAEdldFVJbnQzMgBUb0lu
dDMyAFNDX2FmY2Q1MWQ5NmUxNTRkOGM4MTkyOTk4ZmI3MjhlMGEyADxNb2R1bGU+AElucHV0SUQA
bXNjb3JsaWIAc2V0X0lmR29vZABkZWZhdWx0SW5zdGFuY2UAUnVudGltZVR5cGVIYW5kbGUAR2V0
VHlwZUZyb21IYW5kbGUAZ2V0X01lbnRvck5hbWUAc2V0X01lbnRvck5hbWUAZ2V0X0NvbnRlc3Rh
bnROYW1lAHNldF9Db250ZXN0YW50TmFtZQBJbnB1dE5hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuUGlwZWxpbmUAVHlwZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUA
QXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5l
cmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0
cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFz
c2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJs
eUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21w
aWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3Nl
bWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJp
YnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1
dGUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBHZXRTdHJpbmcAU3lzdGVtLkNvbXBv
bmVudE1vZGVsAFNDX2FmY2Q1MWQ5NmUxNTRkOGM4MTkyOTk4ZmI3MjhlMGEyLmRsbABzZXRfSWZH
b29kX0lzTnVsbABnZXRfTWVudG9yTmFtZV9Jc051bGwAc2V0X01lbnRvck5hbWVfSXNOdWxsAGdl
dF9Db250ZXN0YW50TmFtZV9Jc051bGwAc2V0X0NvbnRlc3RhbnROYW1lX0lzTnVsbABzZXRfUHJv
YmxlbV9Jc051bGwAZ2V0X1Bvc2l0aW9uX0lzTnVsbABzZXRfaW50UG9zaXRpb25fSXNOdWxsAGdl
dF9TZXJpZXNOdW1iZXJfSXNOdWxsAHNldF9pbnRTZXJpZXNfSXNOdWxsAFNldE51bGwAc2V0X1By
b2JsZW0Ac2V0X0l0ZW0AU3lzdGVtAFRyaW0AcmVzb3VyY2VNYW4AQm9vbGVhbgBTY3JpcHRNYWlu
AFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0
aW9uAGdldF9Qb3NpdGlvbgBzZXRfaW50UG9zaXRpb24ASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlv
bgBTdHJpbmdDb21wYXJpc29uAEN1bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAGdl
dF9TZXJpZXNOdW1iZXIASW5wdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBn
ZXRfUmVzb3VyY2VNYW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVt
LlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDX2FmY2Q1MWQ5NmUx
NTRkOGM4MTkyOTk4ZmI3MjhlMGEyLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1
Z2dpbmdNb2RlcwBzZXRfaW50U2VyaWVzAFNDX2FmY2Q1MWQ5NmUxNTRkOGM4MTkyOTk4ZmI3Mjhl
MGEyLlByb3BlcnRpZXMAVmFyaWFibGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5k
ZXhlcwBTZXR0aW5ncwBFcXVhbHMAQ29ubmVjdGlvbnMAT2JqZWN0AEVuZE9mUm93c2V0AGdldF9E
ZWZhdWx0AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABNaWNy
b3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AENvbnZlcnQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBl
bGluZUhvc3QASW5wdXQwX1Byb2Nlc3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lucHV0Um93AE5leHRS
b3cAZ2V0X0Fzc2VtYmx5AABLQQB0ACAAbABlAGEAcwB0ACAAbwBuAGUAIAB2AG8AbAB1AG0AbgAg
AGkAcwAgAG4AbwB0ACAAZgBpAGwAbABlAGQAIABpAG4ALgAAaVQAaABlACAAcwBlAHIAaQBlAHMA
IABhAG4AZAAgAHAAbwBzAGkAdABpAG8AbgAgAG4AdQBtAGIAZQByAHMAIABhAHIAZQBuACcAdAAg
AGIAbwB0AGgAIABpAG4AdABlAGcAZQByAHMAAQEAgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQBy
AHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEA
cwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABp
AG4AcwB0AGUAYQBkAC4AAA9JAG4AcAB1AHQAIAAwAABxUwBDAF8AYQBmAGMAZAA1ADEAZAA5ADYA
ZQAxADUANABkADgAYwA4ADEAOQAyADkAOQA4AGYAYgA3ADIAOABlADAAYQAyAC4AUAByAG8AcABl
AHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAABNSodOQMC7QK/SvCu7wARxAAQgAQEIAyAA
AQUgAQEREQQgAQEOBSABARFZBAcCCAgEAAEICQMgAA4JIAMBEkEdCBJFAwYSQQMGHQgEIAEOCAUg
AgEIHAQgAQIIBCABCQgDIAACBiACAg4RfQUgAR0ICAgAARKAgRGAhQUgABKAiQcgAgEOEoCJCLd6
XFYZNOCJCImEXc2AgMyRAwYSFAMGEhgDBhJJAwYSUQMGElUDBhIgBSABARIMBCABAQIDIAAJCSAE
AQgOEkESRQUgAQESSQQAABJRBAAAElUFAAEBElUEAAASIAMAAAEDKAAOAygAAgMoAAkDKAAIBAgA
ElEECAASVQQIABIgCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIA
AAAAACgBACNTQ19hZmNkNTFkOTZlMTU0ZDhjODE5Mjk5OGZiNzI4ZTBhMgAABQEAAAAAFgEAEUNv
cHlyaWdodCBAICAyMDE1AABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjUBAFQOFEZyYW1l
d29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNQQBAAAAALQAAADOyu++AQAAAJEAAABs
U3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAu
MCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3Rl
bS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAAUNwAA
AAAAAAAAAAAuNwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIDcAAAAAAAAAAAAAAABfQ29yRGxs
TWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAA
UwBDAF8AYQBmAGMAZAA1ADEAZAA5ADYAZQAxADUANABkADgAYwA4ADEAOQAyADkAOQA4AGYAYgA3
ADIAOABlADAAYQAyAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAA
LgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBhAGYAYwBkADUAMQBk
ADkANgBlADEANQA0AGQAOABjADgAMQA5ADIAOQA5ADgAZgBiADcAMgA4AGUAMABhADIALgBkAGwA
bAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0
ACAAQAAgACAAMgAwADEANQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAA
AAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfAGEAZgBj
AGQANQAxAGQAOQA2AGUAMQA1ADQAZAA4AGMAOAAxADkAMgA5ADkAOABmAGIANwAyADgAZQAwAGEA
MgAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwBhAGYAYwBk
ADUAMQBkADkANgBlADEANQA0AGQAOABjADgAMQA5ADIAOQA5ADgAZgBiADcAMgA4AGUAMABhADIA
AAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAI
AAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAEA3AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_afcd51d96e154d8c8192998fb728e0a2</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">1c6b343982f8d820e62e716597355c10</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Import dodgy data\Validate data.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import dodgy data\Validate data.Inputs[Input 0].Columns[ContestantName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="ContestantName"
                      lineageId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output].Columns[ContestantName]"
                      usageType="readWrite" />
                    <inputColumn
                      refId="Package\Import dodgy data\Validate data.Inputs[Input 0].Columns[SeriesNumber]"
                      cachedDataType="ui4"
                      cachedName="SeriesNumber"
                      lineageId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output].Columns[SeriesNumber]" />
                    <inputColumn
                      refId="Package\Import dodgy data\Validate data.Inputs[Input 0].Columns[Position]"
                      cachedDataType="ui4"
                      cachedName="Position"
                      lineageId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output].Columns[Position]" />
                    <inputColumn
                      refId="Package\Import dodgy data\Validate data.Inputs[Input 0].Columns[MentorName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="MentorName"
                      lineageId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output].Columns[MentorName]"
                      usageType="readWrite" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import dodgy data\Validate data.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Import dodgy data\Validate data.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import dodgy data\Validate data.Outputs[Output 0].Columns[intSeries]"
                      dataType="i4"
                      lineageId="Package\Import dodgy data\Validate data.Outputs[Output 0].Columns[intSeries]"
                      name="intSeries" />
                    <outputColumn
                      refId="Package\Import dodgy data\Validate data.Outputs[Output 0].Columns[IfGood]"
                      dataType="bool"
                      lineageId="Package\Import dodgy data\Validate data.Outputs[Output 0].Columns[IfGood]"
                      name="IfGood" />
                    <outputColumn
                      refId="Package\Import dodgy data\Validate data.Outputs[Output 0].Columns[Problem]"
                      codePage="1252"
                      dataType="str"
                      length="1000"
                      lineageId="Package\Import dodgy data\Validate data.Outputs[Output 0].Columns[Problem]"
                      name="Problem" />
                    <outputColumn
                      refId="Package\Import dodgy data\Validate data.Outputs[Output 0].Columns[intPosition]"
                      dataType="i4"
                      lineageId="Package\Import dodgy data\Validate data.Outputs[Output 0].Columns[intPosition]"
                      name="intPosition" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Import dodgy data.Paths[Bad data]"
              endId="Package\Import dodgy data\Bad data table.Inputs[OLE DB Destination Input]"
              name="Bad data"
              startId="Package\Import dodgy data\Conditional Split.Outputs[Bad data]" />
            <path
              refId="Package\Import dodgy data.Paths[Flat File Source Output]"
              endId="Package\Import dodgy data\Validate data.Inputs[Input 0]"
              name="Flat File Source Output"
              startId="Package\Import dodgy data\Dodgy data import.Outputs[Flat File Source Output]" />
            <path
              refId="Package\Import dodgy data.Paths[Good data]"
              endId="Package\Import dodgy data\Good data table.Inputs[OLE DB Destination Input]"
              name="Good data"
              startId="Package\Import dodgy data\Conditional Split.Outputs[Good data]" />
            <path
              refId="Package\Import dodgy data.Paths[Output 0]"
              endId="Package\Import dodgy data\Conditional Split.Inputs[Conditional Split Input]"
              name="Output 0"
              startId="Package\Import dodgy data\Validate data.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{70B9FC0E-CBAF-4A06-8B19-58B925D5F2E7}"
      DTS:From="Package\Delete old data"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Import dodgy data" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="151,42"
          Id="Package\Delete old data"
          TopLeft="142,42" />
        <NodeLayout
          Size="167,42"
          Id="Package\Import dodgy data"
          TopLeft="149.5,138.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="217.5,84">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="15.5,54.5"
              Start="0,0"
              End="15.5,47">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.25" />
                  <mssgle:CubicBezierSegment
                    Point1="0,23.25"
                    Point2="0,27.25"
                    Point3="4,27.25" />
                  <mssgle:LineSegment
                    End="11.5,27.25" />
                  <mssgle:CubicBezierSegment
                    Point1="11.5,27.25"
                    Point2="15.5,27.25"
                    Point3="15.5,31.25" />
                  <mssgle:LineSegment
                    End="15.5,47" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Import dodgy data">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="154,42"
          Id="Package\Import dodgy data\Good data table"
          TopLeft="182,333" />
        <NodeLayout
          Size="155,42"
          Id="Package\Import dodgy data\Conditional Split"
          TopLeft="179,184" />
        <NodeLayout
          Size="167,42"
          Id="Package\Import dodgy data\Dodgy data import"
          TopLeft="168,18" />
        <NodeLayout
          Size="141,42"
          Id="Package\Import dodgy data\Validate data"
          TopLeft="179,101" />
        <NodeLayout
          Size="147,42"
          Id="Package\Import dodgy data\Bad data table"
          TopLeft="376,334" />
        <EdgeLayout
          Id="Package\Import dodgy data.Paths[Bad data]"
          TopLeft="281,226">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="168.5,108"
              Start="0,0"
              End="168.5,100.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39.8620689655172" />
                  <mssgle:CubicBezierSegment
                    Point1="0,39.8620689655172"
                    Point2="0,43.8620689655172"
                    Point3="4,43.8620689655172" />
                  <mssgle:LineSegment
                    End="164.5,43.8620689655172" />
                  <mssgle:CubicBezierSegment
                    Point1="164.5,43.8620689655172"
                    Point2="168.5,43.8620689655172"
                    Point3="168.5,47.8620689655172" />
                  <mssgle:LineSegment
                    End="168.5,100.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="64.346640625,48.8620689655172,39.80671875,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import dodgy data.Paths[Output 0]"
          TopLeft="253,143">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41"
              Start="0,0"
              End="0,33.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import dodgy data.Paths[Good data]"
          TopLeft="257.75,226">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,107"
              Start="0,0"
              End="0,99.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,99.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-23.30587890625,44.87548828125,46.6117578125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import dodgy data.Paths[Flat File Source Output]"
          TopLeft="250.5,60">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41"
              Start="0,0"
              End="0,33.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Import dodgy data\Good data table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Import dodgy data\Bad data table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>