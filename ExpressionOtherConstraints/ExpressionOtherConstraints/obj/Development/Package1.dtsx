<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="11/11/2015 1:29:29 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="EAGLE"
  DTS:CreatorName="Eagle\Charleseagle"
  DTS:DTSID="{776E0F4D-AF4A-4EF3-95C7-5D21A301AA56}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="13.0.700.219"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package1"
  DTS:PackageType="5"
  DTS:VersionBuild="9"
  DTS:VersionGUID="{D400DEFA-7438-412A-9E1C-9F5C63BEADC2}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[CopiedFolder]"
      DTS:CreationName="FILE"
      DTS:DTSID="{C1665F66-CC64-46CF-AEF7-05F1BF19B637}"
      DTS:ObjectName="CopiedFolder">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:FileUsageType="2"
          DTS:ConnectionString="E:\SQL_Server_Practice\SSIS\ExpressionOtherConstraints\CopiedFolder" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ExpressionOtherConstraints]"
      DTS:CreationName="FILE"
      DTS:DTSID="{35C56C97-0CAD-4B6F-9D1F-64E0F8D7FCBF}"
      DTS:ObjectName="ExpressionOtherConstraints">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:FileUsageType="2"
          DTS:ConnectionString="E:\SQL_Server_Practice\SSIS\ExpressionOtherConstraints" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[X Factor contestants.xlsx]"
      DTS:CreationName="FILE"
      DTS:DTSID="{2062CF44-982B-4C75-838A-57AE49B5C30F}"
      DTS:ObjectName="X Factor contestants.xlsx">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="E:\SQL_Server_Practice\SSIS\ExpressionOtherConstraints\X Factor contestants.xlsx" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C53B7CBC-71FD-44A1-9F89-0C4010A28262}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="NumberContestants">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{01291F59-0DFE-45D4-96EC-BBE2465595F4}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="NumberMentors">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{70E08AF2-9FC4-4B3B-A3CC-9B02F6411A4E}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="NumberSeries">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Copy finalists workbook to another folder"
      DTS:CreationName="Microsoft.FileSystemTask"
      DTS:Description="File System Task"
      DTS:DTSID="{E5B6D3B3-222E-42CF-B13C-5E6ECB3D5724}"
      DTS:ExecutableType="Microsoft.FileSystemTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Copy finalists workbook to another folder"
      DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2016 CTP3.0; Â© 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <FileSystemData
          TaskOverwriteDestFile="True"
          TaskSourcePath="{2062CF44-982B-4C75-838A-57AE49B5C30F}"
          TaskDestinationPath="{C1665F66-CC64-46CF-AEF7-05F1BF19B637}" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Delete old data from Mentors, Finalist, and Series tables"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{830218A5-32EA-4297-8FDA-21E33BA08CAD}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Delete old data from Mentors, Finalist, and Series tables"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016 CTP3.0; Â© 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{B751654D-FBE8-4266-9E83-4223E35E4523}"
          SQLTask:SqlStatementSource="TRUNCATE TABLE Mentors;&#xA;TRUNCATE TABLE Series;&#xA;TRUNCATE TABLE Finalist;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Import and count finalits"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{0B77289C-A41C-4F44-9503-D29375F7D43E}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Import and count finalits"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Import and count finalits\Count the number of finalists"
              componentClassID="Microsoft.RowCount"
              contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
              name="Count the number of finalists">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the variable to hold the row count."
                  name="VariableName">User::NumberContestants</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Import and count finalits\Count the number of finalists.Inputs[Row Count Input 1]"
                  hasSideEffects="true"
                  name="Row Count Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import and count finalits\Count the number of finalists.Outputs[Row Count Output 1]"
                  name="Row Count Output 1"
                  synchronousInputId="Package\Import and count finalits\Count the number of finalists.Inputs[Row Count Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import and count finalits\Import finalists"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="Import finalists"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">Finalists$</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import and count finalits\Import finalists.Connections[OleDbConnection]"
                  connectionManagerID="{D6E6F5B9-4356-4B3D-949F-D4605283C7AC}:external"
                  connectionManagerRefId="Project.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Import and count finalits\Import finalists.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import and count finalits\Import finalists.Outputs[Excel Source Output].Columns[Id]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import and count finalits\Import finalists.Outputs[Excel Source Output].ExternalColumns[Id]"
                      lineageId="Package\Import and count finalits\Import finalists.Outputs[Excel Source Output].Columns[Id]"
                      name="Id"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import and count finalits\Import finalists.Outputs[Excel Source Output].Columns[Name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import and count finalits\Import finalists.Outputs[Excel Source Output].ExternalColumns[Name]"
                      length="255"
                      lineageId="Package\Import and count finalits\Import finalists.Outputs[Excel Source Output].Columns[Name]"
                      name="Name"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import and count finalits\Import finalists.Outputs[Excel Source Output].Columns[Series]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import and count finalits\Import finalists.Outputs[Excel Source Output].ExternalColumns[Series]"
                      lineageId="Package\Import and count finalits\Import finalists.Outputs[Excel Source Output].Columns[Series]"
                      name="Series"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import and count finalits\Import finalists.Outputs[Excel Source Output].Columns[Category]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import and count finalits\Import finalists.Outputs[Excel Source Output].ExternalColumns[Category]"
                      length="255"
                      lineageId="Package\Import and count finalits\Import finalists.Outputs[Excel Source Output].Columns[Category]"
                      name="Category"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import and count finalits\Import finalists.Outputs[Excel Source Output].Columns[Mentor]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import and count finalits\Import finalists.Outputs[Excel Source Output].ExternalColumns[Mentor]"
                      length="255"
                      lineageId="Package\Import and count finalits\Import finalists.Outputs[Excel Source Output].Columns[Mentor]"
                      name="Mentor"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import and count finalits\Import finalists.Outputs[Excel Source Output].Columns[Finished]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import and count finalits\Import finalists.Outputs[Excel Source Output].ExternalColumns[Finished]"
                      lineageId="Package\Import and count finalits\Import finalists.Outputs[Excel Source Output].Columns[Finished]"
                      name="Finished"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import and count finalits\Import finalists.Outputs[Excel Source Output].ExternalColumns[Id]"
                      dataType="r8"
                      name="Id" />
                    <externalMetadataColumn
                      refId="Package\Import and count finalits\Import finalists.Outputs[Excel Source Output].ExternalColumns[Name]"
                      dataType="wstr"
                      length="255"
                      name="Name" />
                    <externalMetadataColumn
                      refId="Package\Import and count finalits\Import finalists.Outputs[Excel Source Output].ExternalColumns[Series]"
                      dataType="r8"
                      name="Series" />
                    <externalMetadataColumn
                      refId="Package\Import and count finalits\Import finalists.Outputs[Excel Source Output].ExternalColumns[Category]"
                      dataType="wstr"
                      length="255"
                      name="Category" />
                    <externalMetadataColumn
                      refId="Package\Import and count finalits\Import finalists.Outputs[Excel Source Output].ExternalColumns[Mentor]"
                      dataType="wstr"
                      length="255"
                      name="Mentor" />
                    <externalMetadataColumn
                      refId="Package\Import and count finalits\Import finalists.Outputs[Excel Source Output].ExternalColumns[Finished]"
                      dataType="r8"
                      name="Finished" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Import and count finalits\Import finalists.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import and count finalits\Import finalists.Outputs[Excel Source Error Output].Columns[Id]"
                      dataType="r8"
                      lineageId="Package\Import and count finalits\Import finalists.Outputs[Excel Source Error Output].Columns[Id]"
                      name="Id" />
                    <outputColumn
                      refId="Package\Import and count finalits\Import finalists.Outputs[Excel Source Error Output].Columns[Name]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Import and count finalits\Import finalists.Outputs[Excel Source Error Output].Columns[Name]"
                      name="Name" />
                    <outputColumn
                      refId="Package\Import and count finalits\Import finalists.Outputs[Excel Source Error Output].Columns[Series]"
                      dataType="r8"
                      lineageId="Package\Import and count finalits\Import finalists.Outputs[Excel Source Error Output].Columns[Series]"
                      name="Series" />
                    <outputColumn
                      refId="Package\Import and count finalits\Import finalists.Outputs[Excel Source Error Output].Columns[Category]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Import and count finalits\Import finalists.Outputs[Excel Source Error Output].Columns[Category]"
                      name="Category" />
                    <outputColumn
                      refId="Package\Import and count finalits\Import finalists.Outputs[Excel Source Error Output].Columns[Mentor]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Import and count finalits\Import finalists.Outputs[Excel Source Error Output].Columns[Mentor]"
                      name="Mentor" />
                    <outputColumn
                      refId="Package\Import and count finalits\Import finalists.Outputs[Excel Source Error Output].Columns[Finished]"
                      dataType="r8"
                      lineageId="Package\Import and count finalits\Import finalists.Outputs[Excel Source Error Output].Columns[Finished]"
                      name="Finished" />
                    <outputColumn
                      refId="Package\Import and count finalits\Import finalists.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import and count finalits\Import finalists.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import and count finalits\Import finalists.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import and count finalits\Import finalists.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import and count finalits\Put them into Finalist table"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Put them into Finalist table"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Finalist]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import and count finalits\Put them into Finalist table.Connections[OleDbConnection]"
                  connectionManagerID="{B751654D-FBE8-4266-9E83-4223E35E4523}:external"
                  connectionManagerRefId="Project.ConnectionManagers[EAGLE.SSIS]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Import and count finalits\Put them into Finalist table.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import and count finalits\Put them into Finalist table.Inputs[OLE DB Destination Input].Columns[Id]"
                      cachedDataType="r8"
                      cachedName="Id"
                      externalMetadataColumnId="Package\Import and count finalits\Put them into Finalist table.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                      lineageId="Package\Import and count finalits\Import finalists.Outputs[Excel Source Output].Columns[Id]" />
                    <inputColumn
                      refId="Package\Import and count finalits\Put them into Finalist table.Inputs[OLE DB Destination Input].Columns[Name]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Name"
                      externalMetadataColumnId="Package\Import and count finalits\Put them into Finalist table.Inputs[OLE DB Destination Input].ExternalColumns[Name]"
                      lineageId="Package\Import and count finalits\Import finalists.Outputs[Excel Source Output].Columns[Name]" />
                    <inputColumn
                      refId="Package\Import and count finalits\Put them into Finalist table.Inputs[OLE DB Destination Input].Columns[Series]"
                      cachedDataType="r8"
                      cachedName="Series"
                      externalMetadataColumnId="Package\Import and count finalits\Put them into Finalist table.Inputs[OLE DB Destination Input].ExternalColumns[Series]"
                      lineageId="Package\Import and count finalits\Import finalists.Outputs[Excel Source Output].Columns[Series]" />
                    <inputColumn
                      refId="Package\Import and count finalits\Put them into Finalist table.Inputs[OLE DB Destination Input].Columns[Category]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Category"
                      externalMetadataColumnId="Package\Import and count finalits\Put them into Finalist table.Inputs[OLE DB Destination Input].ExternalColumns[Category]"
                      lineageId="Package\Import and count finalits\Import finalists.Outputs[Excel Source Output].Columns[Category]" />
                    <inputColumn
                      refId="Package\Import and count finalits\Put them into Finalist table.Inputs[OLE DB Destination Input].Columns[Mentor]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Mentor"
                      externalMetadataColumnId="Package\Import and count finalits\Put them into Finalist table.Inputs[OLE DB Destination Input].ExternalColumns[Mentor]"
                      lineageId="Package\Import and count finalits\Import finalists.Outputs[Excel Source Output].Columns[Mentor]" />
                    <inputColumn
                      refId="Package\Import and count finalits\Put them into Finalist table.Inputs[OLE DB Destination Input].Columns[Finished]"
                      cachedDataType="r8"
                      cachedName="Finished"
                      externalMetadataColumnId="Package\Import and count finalits\Put them into Finalist table.Inputs[OLE DB Destination Input].ExternalColumns[Finished]"
                      lineageId="Package\Import and count finalits\Import finalists.Outputs[Excel Source Output].Columns[Finished]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import and count finalits\Put them into Finalist table.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                      dataType="i4"
                      name="ID" />
                    <externalMetadataColumn
                      refId="Package\Import and count finalits\Put them into Finalist table.Inputs[OLE DB Destination Input].ExternalColumns[Name]"
                      dataType="wstr"
                      length="255"
                      name="Name" />
                    <externalMetadataColumn
                      refId="Package\Import and count finalits\Put them into Finalist table.Inputs[OLE DB Destination Input].ExternalColumns[Series]"
                      dataType="i4"
                      name="Series" />
                    <externalMetadataColumn
                      refId="Package\Import and count finalits\Put them into Finalist table.Inputs[OLE DB Destination Input].ExternalColumns[Category]"
                      dataType="wstr"
                      length="255"
                      name="Category" />
                    <externalMetadataColumn
                      refId="Package\Import and count finalits\Put them into Finalist table.Inputs[OLE DB Destination Input].ExternalColumns[Mentor]"
                      dataType="wstr"
                      length="255"
                      name="Mentor" />
                    <externalMetadataColumn
                      refId="Package\Import and count finalits\Put them into Finalist table.Inputs[OLE DB Destination Input].ExternalColumns[Finished]"
                      dataType="i4"
                      name="Finished" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import and count finalits\Put them into Finalist table.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Import and count finalits\Put them into Finalist table.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import and count finalits\Put them into Finalist table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import and count finalits\Put them into Finalist table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import and count finalits\Put them into Finalist table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import and count finalits\Put them into Finalist table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Import and count finalits.Paths[Excel Source Output]"
              endId="Package\Import and count finalits\Count the number of finalists.Inputs[Row Count Input 1]"
              name="Excel Source Output"
              startId="Package\Import and count finalits\Import finalists.Outputs[Excel Source Output]" />
            <path
              refId="Package\Import and count finalits.Paths[Row Count Output 1]"
              endId="Package\Import and count finalits\Put them into Finalist table.Inputs[OLE DB Destination Input]"
              name="Row Count Output 1"
              startId="Package\Import and count finalits\Count the number of finalists.Outputs[Row Count Output 1]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\import and count mentors"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{99CFEEAC-4A7D-4458-8A9F-6BCF113E3B54}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="import and count mentors"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\import and count mentors\Count the number of mentors"
              componentClassID="Microsoft.RowCount"
              contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
              name="Count the number of mentors">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the variable to hold the row count."
                  name="VariableName">User::NumberMentors</property>
              </properties>
              <inputs>
                <input
                  refId="Package\import and count mentors\Count the number of mentors.Inputs[Row Count Input 1]"
                  hasSideEffects="true"
                  name="Row Count Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\import and count mentors\Count the number of mentors.Outputs[Row Count Output 1]"
                  name="Row Count Output 1"
                  synchronousInputId="Package\import and count mentors\Count the number of mentors.Inputs[Row Count Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\import and count mentors\Import mentors"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="Import mentors"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">Mentors$</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\import and count mentors\Import mentors.Connections[OleDbConnection]"
                  connectionManagerID="{D6E6F5B9-4356-4B3D-949F-D4605283C7AC}:external"
                  connectionManagerRefId="Project.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\import and count mentors\Import mentors.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\import and count mentors\Import mentors.Outputs[Excel Source Output].Columns[MentorId]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\import and count mentors\Import mentors.Outputs[Excel Source Output].ExternalColumns[MentorId]"
                      lineageId="Package\import and count mentors\Import mentors.Outputs[Excel Source Output].Columns[MentorId]"
                      name="MentorId"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\import and count mentors\Import mentors.Outputs[Excel Source Output].Columns[MentorName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\import and count mentors\Import mentors.Outputs[Excel Source Output].ExternalColumns[MentorName]"
                      length="255"
                      lineageId="Package\import and count mentors\Import mentors.Outputs[Excel Source Output].Columns[MentorName]"
                      name="MentorName"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\import and count mentors\Import mentors.Outputs[Excel Source Output].ExternalColumns[MentorId]"
                      dataType="r8"
                      name="MentorId" />
                    <externalMetadataColumn
                      refId="Package\import and count mentors\Import mentors.Outputs[Excel Source Output].ExternalColumns[MentorName]"
                      dataType="wstr"
                      length="255"
                      name="MentorName" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\import and count mentors\Import mentors.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\import and count mentors\Import mentors.Outputs[Excel Source Error Output].Columns[MentorId]"
                      dataType="r8"
                      lineageId="Package\import and count mentors\Import mentors.Outputs[Excel Source Error Output].Columns[MentorId]"
                      name="MentorId" />
                    <outputColumn
                      refId="Package\import and count mentors\Import mentors.Outputs[Excel Source Error Output].Columns[MentorName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\import and count mentors\Import mentors.Outputs[Excel Source Error Output].Columns[MentorName]"
                      name="MentorName" />
                    <outputColumn
                      refId="Package\import and count mentors\Import mentors.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\import and count mentors\Import mentors.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\import and count mentors\Import mentors.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\import and count mentors\Import mentors.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\import and count mentors\Put them into Mentors table"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Put them into Mentors table"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Mentors]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\import and count mentors\Put them into Mentors table.Connections[OleDbConnection]"
                  connectionManagerID="{B751654D-FBE8-4266-9E83-4223E35E4523}:external"
                  connectionManagerRefId="Project.ConnectionManagers[EAGLE.SSIS]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\import and count mentors\Put them into Mentors table.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\import and count mentors\Put them into Mentors table.Inputs[OLE DB Destination Input].Columns[MentorId]"
                      cachedDataType="r8"
                      cachedName="MentorId"
                      externalMetadataColumnId="Package\import and count mentors\Put them into Mentors table.Inputs[OLE DB Destination Input].ExternalColumns[MentorID]"
                      lineageId="Package\import and count mentors\Import mentors.Outputs[Excel Source Output].Columns[MentorId]" />
                    <inputColumn
                      refId="Package\import and count mentors\Put them into Mentors table.Inputs[OLE DB Destination Input].Columns[MentorName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="MentorName"
                      externalMetadataColumnId="Package\import and count mentors\Put them into Mentors table.Inputs[OLE DB Destination Input].ExternalColumns[MentorName]"
                      lineageId="Package\import and count mentors\Import mentors.Outputs[Excel Source Output].Columns[MentorName]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\import and count mentors\Put them into Mentors table.Inputs[OLE DB Destination Input].ExternalColumns[MentorID]"
                      dataType="i4"
                      name="MentorID" />
                    <externalMetadataColumn
                      refId="Package\import and count mentors\Put them into Mentors table.Inputs[OLE DB Destination Input].ExternalColumns[MentorName]"
                      dataType="wstr"
                      length="255"
                      name="MentorName" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\import and count mentors\Put them into Mentors table.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\import and count mentors\Put them into Mentors table.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\import and count mentors\Put them into Mentors table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\import and count mentors\Put them into Mentors table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\import and count mentors\Put them into Mentors table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\import and count mentors\Put them into Mentors table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\import and count mentors.Paths[Excel Source Output]"
              endId="Package\import and count mentors\Count the number of mentors.Inputs[Row Count Input 1]"
              name="Excel Source Output"
              startId="Package\import and count mentors\Import mentors.Outputs[Excel Source Output]" />
            <path
              refId="Package\import and count mentors.Paths[Row Count Output 1]"
              endId="Package\import and count mentors\Put them into Mentors table.Inputs[OLE DB Destination Input]"
              name="Row Count Output 1"
              startId="Package\import and count mentors\Count the number of mentors.Outputs[Row Count Output 1]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\import and count series"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{5BFB40E0-7DF7-43C2-B85E-7F6A300C9348}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="import and count series"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\import and count series\Count the number of series"
              componentClassID="Microsoft.RowCount"
              contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
              name="Count the number of series">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the variable to hold the row count."
                  name="VariableName">User::NumberSeries</property>
              </properties>
              <inputs>
                <input
                  refId="Package\import and count series\Count the number of series.Inputs[Row Count Input 1]"
                  hasSideEffects="true"
                  name="Row Count Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\import and count series\Count the number of series.Outputs[Row Count Output 1]"
                  name="Row Count Output 1"
                  synchronousInputId="Package\import and count series\Count the number of series.Inputs[Row Count Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\import and count series\Import seriess"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="Import seriess"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">Series$</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\import and count series\Import seriess.Connections[OleDbConnection]"
                  connectionManagerID="{D6E6F5B9-4356-4B3D-949F-D4605283C7AC}:external"
                  connectionManagerRefId="Project.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\import and count series\Import seriess.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\import and count series\Import seriess.Outputs[Excel Source Output].Columns[Series]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\import and count series\Import seriess.Outputs[Excel Source Output].ExternalColumns[Series]"
                      lineageId="Package\import and count series\Import seriess.Outputs[Excel Source Output].Columns[Series]"
                      name="Series"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\import and count series\Import seriess.Outputs[Excel Source Output].Columns[Winner]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\import and count series\Import seriess.Outputs[Excel Source Output].ExternalColumns[Winner]"
                      length="255"
                      lineageId="Package\import and count series\Import seriess.Outputs[Excel Source Output].Columns[Winner]"
                      name="Winner"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\import and count series\Import seriess.Outputs[Excel Source Output].Columns[Start date]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\import and count series\Import seriess.Outputs[Excel Source Output].ExternalColumns[Start date]"
                      lineageId="Package\import and count series\Import seriess.Outputs[Excel Source Output].Columns[Start date]"
                      name="Start date"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\import and count series\Import seriess.Outputs[Excel Source Output].Columns[Finish date]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\import and count series\Import seriess.Outputs[Excel Source Output].ExternalColumns[Finish date]"
                      lineageId="Package\import and count series\Import seriess.Outputs[Excel Source Output].Columns[Finish date]"
                      name="Finish date"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\import and count series\Import seriess.Outputs[Excel Source Output].ExternalColumns[Series]"
                      dataType="r8"
                      name="Series" />
                    <externalMetadataColumn
                      refId="Package\import and count series\Import seriess.Outputs[Excel Source Output].ExternalColumns[Winner]"
                      dataType="wstr"
                      length="255"
                      name="Winner" />
                    <externalMetadataColumn
                      refId="Package\import and count series\Import seriess.Outputs[Excel Source Output].ExternalColumns[Start date]"
                      dataType="date"
                      name="Start date" />
                    <externalMetadataColumn
                      refId="Package\import and count series\Import seriess.Outputs[Excel Source Output].ExternalColumns[Finish date]"
                      dataType="date"
                      name="Finish date" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\import and count series\Import seriess.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\import and count series\Import seriess.Outputs[Excel Source Error Output].Columns[Series]"
                      dataType="r8"
                      lineageId="Package\import and count series\Import seriess.Outputs[Excel Source Error Output].Columns[Series]"
                      name="Series" />
                    <outputColumn
                      refId="Package\import and count series\Import seriess.Outputs[Excel Source Error Output].Columns[Winner]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\import and count series\Import seriess.Outputs[Excel Source Error Output].Columns[Winner]"
                      name="Winner" />
                    <outputColumn
                      refId="Package\import and count series\Import seriess.Outputs[Excel Source Error Output].Columns[Start date]"
                      dataType="date"
                      lineageId="Package\import and count series\Import seriess.Outputs[Excel Source Error Output].Columns[Start date]"
                      name="Start date" />
                    <outputColumn
                      refId="Package\import and count series\Import seriess.Outputs[Excel Source Error Output].Columns[Finish date]"
                      dataType="date"
                      lineageId="Package\import and count series\Import seriess.Outputs[Excel Source Error Output].Columns[Finish date]"
                      name="Finish date" />
                    <outputColumn
                      refId="Package\import and count series\Import seriess.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\import and count series\Import seriess.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\import and count series\Import seriess.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\import and count series\Import seriess.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\import and count series\Put them into Series table"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Put them into Series table"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Series]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\import and count series\Put them into Series table.Connections[OleDbConnection]"
                  connectionManagerID="{B751654D-FBE8-4266-9E83-4223E35E4523}:external"
                  connectionManagerRefId="Project.ConnectionManagers[EAGLE.SSIS]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\import and count series\Put them into Series table.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\import and count series\Put them into Series table.Inputs[OLE DB Destination Input].Columns[Series]"
                      cachedDataType="r8"
                      cachedName="Series"
                      externalMetadataColumnId="Package\import and count series\Put them into Series table.Inputs[OLE DB Destination Input].ExternalColumns[Series]"
                      lineageId="Package\import and count series\Import seriess.Outputs[Excel Source Output].Columns[Series]" />
                    <inputColumn
                      refId="Package\import and count series\Put them into Series table.Inputs[OLE DB Destination Input].Columns[Winner]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Winner"
                      externalMetadataColumnId="Package\import and count series\Put them into Series table.Inputs[OLE DB Destination Input].ExternalColumns[Winner]"
                      lineageId="Package\import and count series\Import seriess.Outputs[Excel Source Output].Columns[Winner]" />
                    <inputColumn
                      refId="Package\import and count series\Put them into Series table.Inputs[OLE DB Destination Input].Columns[Start date]"
                      cachedDataType="date"
                      cachedName="Start date"
                      externalMetadataColumnId="Package\import and count series\Put them into Series table.Inputs[OLE DB Destination Input].ExternalColumns[StartDate]"
                      lineageId="Package\import and count series\Import seriess.Outputs[Excel Source Output].Columns[Start date]" />
                    <inputColumn
                      refId="Package\import and count series\Put them into Series table.Inputs[OLE DB Destination Input].Columns[Finish date]"
                      cachedDataType="date"
                      cachedName="Finish date"
                      externalMetadataColumnId="Package\import and count series\Put them into Series table.Inputs[OLE DB Destination Input].ExternalColumns[FinishDate]"
                      lineageId="Package\import and count series\Import seriess.Outputs[Excel Source Output].Columns[Finish date]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\import and count series\Put them into Series table.Inputs[OLE DB Destination Input].ExternalColumns[Series]"
                      dataType="i4"
                      name="Series" />
                    <externalMetadataColumn
                      refId="Package\import and count series\Put them into Series table.Inputs[OLE DB Destination Input].ExternalColumns[Winner]"
                      dataType="wstr"
                      length="255"
                      name="Winner" />
                    <externalMetadataColumn
                      refId="Package\import and count series\Put them into Series table.Inputs[OLE DB Destination Input].ExternalColumns[StartDate]"
                      dataType="dbDate"
                      name="StartDate" />
                    <externalMetadataColumn
                      refId="Package\import and count series\Put them into Series table.Inputs[OLE DB Destination Input].ExternalColumns[FinishDate]"
                      dataType="dbDate"
                      name="FinishDate" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\import and count series\Put them into Series table.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\import and count series\Put them into Series table.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\import and count series\Put them into Series table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\import and count series\Put them into Series table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\import and count series\Put them into Series table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\import and count series\Put them into Series table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\import and count series.Paths[Excel Source Output]"
              endId="Package\import and count series\Count the number of series.Inputs[Row Count Input 1]"
              name="Excel Source Output"
              startId="Package\import and count series\Import seriess.Outputs[Excel Source Output]" />
            <path
              refId="Package\import and count series.Paths[Row Count Output 1]"
              endId="Package\import and count series\Put them into Series table.Inputs[OLE DB Destination Input]"
              name="Row Count Output 1"
              startId="Package\import and count series\Count the number of series.Outputs[Row Count Output 1]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Show results"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{99ADA598-4FA2-42C7-9AD5-F439B3F39ADF}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Show results"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_d4fe197ccfa34a1eb527b4db351907a2"
          VSTAMajorVersion="14"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::NumberContestants,User::NumberMentors,User::NumberSeries">
          <ProjectItem
            Name="ST_d4fe197ccfa34a1eb527b4db351907a2.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{c33cfe28-16c2-4dfd-bd56-863468455779}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_d4fe197ccfa34a1eb527b4db351907a2</RootNamespace>
    <AssemblyName>ST_d4fe197ccfa34a1eb527b4db351907a2</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d4fe197ccfa34a1eb527b4db351907a2.Properties.Settings.get_Default():ST_d4fe197ccfa34a1eb527b4db351907a2.Properties.Sett" +
    "ings")]

namespace ST_d4fe197ccfa34a1eb527b4db351907a2.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_d4fe197ccfa34a1eb527b4db351907a2
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here

            int NumberContestants = Convert.ToInt32(Dts.Variables["User::NumberContestants"].Value);
            int NumberMentors = Convert.ToInt32(Dts.Variables["User::NumberMentors"].Value);
            int NumberSeriess = Convert.ToInt32(Dts.Variables["User::NumberSeries"].Value);

            MessageBox.Show("Found\n" + NumberContestants + " contestants\n" 
                + NumberSeriess + " series\n" + NumberMentors + " mentors");
            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_d4fe197ccfa34a1eb527b4db351907a2</msb:CodeName>
		<msb:DisplayName>ST_d4fe197ccfa34a1eb527b4db351907a2</msb:DisplayName>
		<msb:ProjectId>{6E236560-282E-4CFE-ACD2-93DD32D2223D}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_d4fe197ccfa34a1eb527b4db351907a2.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_d4fe197ccfa34a1eb527b4db351907a2")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_d4fe197ccfa34a1eb527b4db351907a2")]
[assembly: AssemblyCopyright("Copyright @  2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d4fe197ccfa34a1eb527b4db351907a2.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d4fe197ccfa34a1eb527b4db351907a2.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d4fe197ccfa34a1eb527b4db351907a2.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_d4fe197ccfa34a1eb527b4db351907a2.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_d4fe197ccfa34a1eb527b4db351907a2.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_d4fe197ccfa34a1eb527b4db351907a2.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDACpmQ1YAAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAAWi8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAAgvAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAYA8AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAA8
LwAAAAAAAEgAAAACAAUAfCEAANQMAAABAAAAAAAAAFAuAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBAC5AAAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKKBQAAAoKAigQAAAKbxEAAApyMQAAcG8SAAAKbxMAAAooFAAACgsCKBAAAApvEQAACnJZAABw
bxIAAApvEwAACigUAAAKDB2NEQAAASUWcn8AAHCiJRcGjBwAAAGiJRhyjQAAcKIlGQiMHAAAAaIl
GnKpAABwoiUbB4wcAAABoiUccrsAAHCiKBUAAAooFgAACiYCKBAAAAoWbxcAAAoqHgIoGAAACioe
AigZAAAKKq5+AQAABC0ecs0AAHDQAwAAAigaAAAKbxsAAApzHAAACoABAAAEfgEAAAQqGn4CAAAE
Kh4CgAIAAAQqGn4DAAAEKh4CKB0AAAoqLnMIAAAGgAMAAAQqAEJTSkIBAAEAAAAAAAwAAAB2NC4w
LjMwMzE5AAAAAAUAbAAAAPwDAAAjfgAAaAQAAKQFAAAjU3RyaW5ncwAAAAAMCgAAQAEAACNVUwBM
CwAAEAAAACNHVUlEAAAAXAsAAHgBAAAjQmxvYgAAAAAAAAACAAABVx2iAQkDAAAA+gEzABYAAAEA
AAAiAAAABQAAAAYAAAAJAAAAAQAAAB0AAAACAAAAEAAAAAEAAAACAAAAAwAAAAQAAAABAAAABQAA
AAEAAAABAAAAAAB7AwEAAAAAAAYALQJLBAYAvAJLBAYAeQE4BA8AvwQAAAYApgH5AwYAEAL5AwYA
8QH5AwYAowL5AwYATQL5AwYAZgL5AwYAvQH5AwYA2AHqAgoAgQIqAwoA+AAqAwYAswOsAwYAXAE4
BAYATgWsAwYAGwRrBAYACwTkAw4ALAFlAw4AjQFlAw4AFAHPAwYAQQFLBAoAUwMqAxIAAQWjABIA
dgCjAAYAfQWsAwYAAwCsAwYABAOsAxYAigUUBRYAYQUUBQYAwwCsAwYAfwCsAwYAmQX5AwAAAAAt
AAAAAAABAAEAAQAQAMQDCQA5AAEAAQAAABAAcgTOBEUAAQADAAABEAALBc4EWQADAAcAAwEAADkF
AAA9AAQACgARALgDeQARAOgAfQARAGYAgQAGBlUAhQBWgCkFiABWgMgAiABQIAAAAACGAMoDBgAB
ABUhAAAAAIYYKwQGAAEAHSEAAAAAgxgrBAYAAQAlIQAAAACTCBcEjAABAFEhAAAAAJMI0ACRAAEA
WCEAAAAAkwjcAJYAAQBgIQAAAACWCFUFnAACAGchAAAAAIYYKwQGAAIAbyEAAAAAkRgxBKEAAgAA
AAEA5AIJACsEAQARACsEBgAZACsECgApACsEEAAxACsEEAA5ACsEEABBACsEEABJACsEEABRACsE
EABZACsEEABhACsEEABpACsEBgCBACsEBgCpACsEFQC5ACsEBgBxADEFIQDBAP0EJgDJAKMDKwDR
ANoCMQDZAAEANQDpAEcFOgDxAIUFQADBAG4FAQBxACsEBgCJACsEBgABAZEARgABAZUFTwCRACsE
VQCxACsEBgAIABQAbwAIABgAdAApAHMA3AAuAAsAtAAuABMAvQAuABsA3AAuACMA5QAuACsADgEu
ADMADgEuADsADgEuAEMA5QAuAEsAFAEuAFMADgEuAFsAKwFDAGMAdABJAHMA3ABhAHsAdABjAGsA
dAAbAAMAAQAEAAMAAAAbBKUAAADwAKoAAABZBa8AAgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcABIAA
AAEAAAChFl0/AAAAAAAACQAAAAQAAAAAAAAAAAAAAF0AXQAAAAAADQAAAAAAAAAAAAAAZgALAwAA
AAAEAAAAAAAAAAAAAABdAKwDAAAAAA0AAAAAAAAAAAAAAGYANgAAAAAABAAAAAAAAAAAAAAAXQAU
BQAAAAAAAAAAAQAAAHwEAAAFAAIAAAAAAABUb0ludDMyAFNUX2Q0ZmUxOTdjY2ZhMzRhMWViNTI3
YjRkYjM1MTkwN2EyADxNb2R1bGU+AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1
ZV9fAG1zY29ybGliAGRlZmF1bHRJbnN0YW5jZQBWYXJpYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBH
ZXRUeXBlRnJvbUhhbmRsZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFR5cGUARmFp
bHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0
T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0
YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1
dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlU
aXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtB
dHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRp
b25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1
Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRy
eVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJp
bGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBT
dHJpbmcATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1v
ZGVsAFNUX2Q0ZmUxOTdjY2ZhMzRhMWViNTI3YjRkYjM1MTkwN2EyLmRsbABnZXRfSXRlbQBTeXN0
ZW0ARW51bQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3Rl
bS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEN1bHR1cmVJbmZvAGdldF9SZXNvdXJj
ZU1hbmFnZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5D
b21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfZDRmZTE5N2NjZmEzNGExZWI1Mjdi
NGRiMzUxOTA3YTIuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVz
AFNUX2Q0ZmUxOTdjY2ZhMzRhMWViNTI3YjRkYjM1MTkwN2EyLlByb3BlcnRpZXMAZ2V0X1Zhcmlh
YmxlcwBTZXR0aW5ncwBTeXN0ZW0uV2luZG93cy5Gb3JtcwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0
UmVzdWx0cwBDb25jYXQAT2JqZWN0AGdldF9EZWZhdWx0AERpYWxvZ1Jlc3VsdABzZXRfVGFza1Jl
c3VsdABDb252ZXJ0AFNob3cATWVzc2FnZUJveABnZXRfQXNzZW1ibHkAAAAAL1UAcwBlAHIAOgA6
AE4AdQBtAGIAZQByAEMAbwBuAHQAZQBzAHQAYQBuAHQAcwAAJ1UAcwBlAHIAOgA6AE4AdQBtAGIA
ZQByAE0AZQBuAHQAbwByAHMAACVVAHMAZQByADoAOgBOAHUAbQBiAGUAcgBTAGUAcgBpAGUAcwAA
DUYAbwB1AG4AZAAKAAAbIABjAG8AbgB0AGUAcwB0AGEAbgB0AHMACgAAESAAcwBlAHIAaQBlAHMA
CgAAESAAbQBlAG4AdABvAHIAcwAAcVMAVABfAGQANABmAGUAMQA5ADcAYwBjAGYAYQAzADQAYQAx
AGUAYgA1ADIANwBiADQAZABiADMANQAxADkAMAA3AGEAMgAuAFAAcgBvAHAAZQByAHQAaQBlAHMA
LgBSAGUAcwBvAHUAcgBjAGUAcwAAAHtteFdT7EBMgONYFNuEDqsABCABAQgDIAABBSABARERBCAB
AQ4FIAEBEVEFBwMICAgEIAASYQQgABJlBSABEmkcAyAAHAQAAQgcBQABDh0cBQABEX0OCAABEoCB
EYCFBSAAEoCJByACAQ4SgIkIt3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSSQMGEk0DBhIQ
AgYIAwYRFAQAABJJBAAAEk0FAAEBEk0EAAASEAMAAAEECAASSQQIABJNBAgAEhAIAQAIAAAAAAAe
AQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUX2Q0ZmUxOTdjY2Zh
MzRhMWViNTI3YjRkYjM1MTkwN2EyAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTUAAEkBABou
TkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBG
cmFtZXdvcmsgNC41AAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNl
UmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1Ymxp
Y0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3Vy
Y2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAADAvAAAAAAAAAAAAAEovAAAAIAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAA8LwAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAg
ABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQBdP6EWAAABAF0/oRY/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfAGQANABmAGUAMQA5ADcAYwBjAGYAYQAzADQAYQAxAGUAYgA1ADIANwBiADQAZABi
ADMANQAxADkAMAA3AGEAMgAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA1ADcAOQAzAC4AMQA2ADIAMgAxAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfAGQANABmAGUAMQA5ADcAYwBjAGYAYQAzADQAYQAxAGUAYgA1ADIANwBiADQAZABiADMA
NQAxADkAMAA3AGEAMgAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA1AAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8AZAA0AGYAZQAxADkANwBjAGMAZgBhADMANABhADEAZQBiADUAMgA3AGIA
NABkAGIAMwA1ADEAOQAwADcAYQAyAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfAGQANABmAGUAMQA5ADcAYwBjAGYAYQAzADQAYQAxAGUAYgA1ADIANwBiADQA
ZABiADMANQAxADkAMAA3AGEAMgAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANQA3ADkAMwAuADEANgAyADIAMQAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA3ADkAMwAuADEANgAyADIAMQAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAABcPwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{F653A5A8-DDCF-4D36-BEEA-CFB10F05EAA7}"
      DTS:From="Package\Delete old data from Mentors, Finalist, and Series tables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Import and count finalits" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{44F502A3-986C-4593-B84D-0B8B0973D788}"
      DTS:From="Package\Delete old data from Mentors, Finalist, and Series tables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\import and count series" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{28D5410D-25BC-43C9-8CB6-AB3221952162}"
      DTS:From="Package\Delete old data from Mentors, Finalist, and Series tables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\import and count mentors" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{76A2458A-6E6E-408E-8734-4E0654F92ABF}"
      DTS:EvalOp="1"
      DTS:Expression="@[User::NumberContestants] &gt;= 100"
      DTS:From="Package\Import and count finalits"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Show results" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{E2E87E37-87C9-4A31-A770-449926A8C8DB}"
      DTS:EvalOp="1"
      DTS:Expression="@[User::NumberSeries] &gt;= 5"
      DTS:From="Package\import and count series"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Show results" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{D2AE23AE-DE53-45D2-9399-DDC0EE058E85}"
      DTS:EvalOp="1"
      DTS:Expression="@[User::NumberMentors] &gt;= 10"
      DTS:From="Package\import and count mentors"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\Show results" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{81C81951-C769-4AA7-9038-2DD239C73D3B}"
      DTS:From="Package\Show results"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\Copy finalists workbook to another folder" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="273,42"
          Id="Package\Copy finalists workbook to another folder"
          TopLeft="232,369" />
        <NodeLayout
          Size="343,42"
          Id="Package\Delete old data from Mentors, Finalist, and Series tables"
          TopLeft="195.5,32.5" />
        <NodeLayout
          Size="195,42"
          Id="Package\Import and count finalits"
          TopLeft="36.5,137.5" />
        <NodeLayout
          Size="202,42"
          Id="Package\import and count mentors"
          TopLeft="493.5,137.5" />
        <NodeLayout
          Size="190,42"
          Id="Package\import and count series"
          TopLeft="274.5,138.5" />
        <NodeLayout
          Size="139,42"
          Id="Package\Show results"
          TopLeft="297,267" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="283.25,74.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-149.25,63"
              Start="0,0"
              End="-149.25,55.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.3240115718419" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17.3240115718419"
                    Point2="0,21.3240115718419"
                    Point3="-4,21.3240115718419" />
                  <mssgle:LineSegment
                    End="-145.25,21.3240115718419" />
                  <mssgle:CubicBezierSegment
                    Point1="-145.25,21.3240115718419"
                    Point2="-149.25,21.3240115718419"
                    Point3="-149.25,25.3240115718419" />
                  <mssgle:LineSegment
                    End="-149.25,55.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="368.25,74.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,64"
              Start="0,0"
              End="0,56.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,56.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="450.75,74.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="143.75,63"
              Start="0,0"
              End="143.75,55.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.3240115718419" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17.3240115718419"
                    Point2="0,21.3240115718419"
                    Point3="4,21.3240115718419" />
                  <mssgle:LineSegment
                    End="139.75,21.3240115718419" />
                  <mssgle:CubicBezierSegment
                    Point1="139.75,21.3240115718419"
                    Point2="143.75,21.3240115718419"
                    Point3="143.75,25.3240115718419" />
                  <mssgle:LineSegment
                    End="143.75,55.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="134,179.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="199.75,87.5"
              Start="0,0"
              End="199.75,80">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,53.2352941176471" />
                  <mssgle:CubicBezierSegment
                    Point1="0,53.2352941176471"
                    Point2="0,57.2352941176471"
                    Point3="4,57.2352941176471" />
                  <mssgle:LineSegment
                    End="195.75,57.2352941176471" />
                  <mssgle:CubicBezierSegment
                    Point1="195.75,57.2352941176471"
                    Point2="199.75,57.2352941176471"
                    Point3="199.75,61.2352941176471" />
                  <mssgle:LineSegment
                    End="199.75,80" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="91.875,62.2352941176471,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="368,180.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,86.5"
              Start="0,0"
              End="0,79">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,79" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,31.5,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="594.5,179.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-195.25,87.5"
              Start="0,0"
              End="-195.25,80">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,53.2352941176471" />
                  <mssgle:CubicBezierSegment
                    Point1="0,53.2352941176471"
                    Point2="0,57.2352941176471"
                    Point3="-4,57.2352941176471" />
                  <mssgle:LineSegment
                    End="-191.25,57.2352941176471" />
                  <mssgle:CubicBezierSegment
                    Point1="-191.25,57.2352941176471"
                    Point2="-195.25,57.2352941176471"
                    Point3="-195.25,61.2352941176471" />
                  <mssgle:LineSegment
                    End="-195.25,80" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-105.625,62.2352941176471,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="367.5,309">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Import and count finalits">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="150,42"
          Id="Package\Import and count finalits\Import finalists"
          TopLeft="182.5,38.5" />
        <NodeLayout
          Size="216,42"
          Id="Package\Import and count finalits\Count the number of finalists"
          TopLeft="154,116" />
        <NodeLayout
          Size="205,42"
          Id="Package\Import and count finalits\Put them into Finalist table"
          TopLeft="165.5,201.5" />
        <EdgeLayout
          Id="Package\Import and count finalits.Paths[Row Count Output 1]"
          TopLeft="265,158">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,43.5"
              Start="0,0"
              End="0,36">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import and count finalits.Paths[Excel Source Output]"
          TopLeft="259.75,80.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35.5"
              Start="0,0"
              End="0,28">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Import and count finalits\Import finalists">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Import and count finalits\Put them into Finalist table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\import and count mentors">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="153,42"
          Id="Package\import and count mentors\Import mentors"
          TopLeft="223.5,55" />
        <NodeLayout
          Size="210,42"
          Id="Package\import and count mentors\Put them into Mentors table"
          TopLeft="199.5,220" />
        <NodeLayout
          Size="219,42"
          Id="Package\import and count mentors\Count the number of mentors"
          TopLeft="195,132.5" />
        <EdgeLayout
          Id="Package\import and count mentors.Paths[Row Count Output 1]"
          TopLeft="304.5,174.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45.5"
              Start="0,0"
              End="0,38">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,38" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\import and count mentors.Paths[Excel Source Output]"
          TopLeft="302.25,97">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35.5"
              Start="0,0"
              End="0,28">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\import and count mentors\Import mentors">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\import and count mentors\Put them into Mentors table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\import and count series">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="146,42"
          Id="Package\import and count series\Import seriess"
          TopLeft="166.5,55" />
        <NodeLayout
          Size="201,42"
          Id="Package\import and count series\Put them into Series table"
          TopLeft="142.5,220" />
        <NodeLayout
          Size="208,42"
          Id="Package\import and count series\Count the number of series"
          TopLeft="138,132.5" />
        <EdgeLayout
          Id="Package\import and count series.Paths[Row Count Output 1]"
          TopLeft="242.5,174.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45.5"
              Start="0,0"
              End="0,38">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,38" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\import and count series.Paths[Excel Source Output]"
          TopLeft="240.75,97">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35.5"
              Start="0,0"
              End="0,28">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\import and count series\Import seriess">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\import and count series\Put them into Series table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>